name: Build ${{ GITHUB_REPOSITORY }} software

on:
  push:
  pull_request:
  workflow_dispatch:

jobs:
  build:
    runs-on: ${{ matrix.sys.host_os }}
    container: ${{ matrix.sys.container }}

    matrix:
      sys:
        - { host_os: ubuntu-latest, cuda_version: '12.8.0', ct_os: 'ubuntu24.04', container: "nvidia/cuda:${{ cuda_version }}-devel-${{ ct_os }}" }
        - { host_os: ubuntu-latest, cuda_version: '12.2.2', ct_os: 'ubuntu22.04', container: "nvidia/cuda:${{ cuda_version }}-devel-${{ ct_os }}" }
  
    permissions:
      contents: write

    strategy:
      # Set fail-fast to false to ensure that feedback is delivered for all matrix combinations. Consider changing this to true when your workflow is stable.
      fail-fast: false

    steps:

    - name: Update & install required packages inside the container
      if: matrix.sys.container != ''
      run: |
        apt update
        apt -y full-upgrade
        apt install -y curl dialog git python3 python3-pip python3-setuptools sudo wget build-essential nvidia-opencl-dev ocl-icd-dev libgmp10 \
                       libgmp-dev make clinfo patch diffutils unzip

    - name: Checkout repo
      uses: actions/checkout@v4
      with:
        submodules: 'recursive'

    - name: Build from sources
      run: cd src && make -j$(nproc)

    - name: Rename binary to release target
      if: startsWith(github.ref, "refs/tags/[0-9]+\.[0-9]+\.[0-9]+")
      run: mv ./mfaktc ./mfaktc-${{ tag_name }}-cuda${{ cuda_version }}-${{ ct_os }}

    - name: Make and upload release
      uses: softprops/action-gh-release@v2
      if: startsWith(github.ref, "refs/tags/[0-9]+\.[0-9]+\.[0-9]+")
      with:
        fail_on_unmatched_files: false
        generate_release_notes: true        
        files: ./mfaktc-${{ tag_name }}-cuda${{ cuda_version }}-${{ ct_os }}
