name: Build mfaktc software

on:
  push:
  pull_request:
  workflow_dispatch:

jobs:
  build:
    runs-on: ${{ matrix.sys.host_os }}
    container: "nvidia/cuda:${{ matrix.sys.cuda_version }}-devel-${{ matrix.sys.ct_os }}"

    permissions:
      contents: write

    strategy:
      # Set fail-fast to false to ensure that feedback is delivered for all matrix combinations. Consider changing this to true when your workflow is stable.
      fail-fast: false

      matrix:
        sys:
          - { host_os: ubuntu-latest, cuda_version: '12.8.0', ct_os: 'ubuntu22.04' }
          - { host_os: ubuntu-latest, cuda_version: '12.6.3', ct_os: 'ubuntu22.04' }
          - { host_os: ubuntu-latest, cuda_version: '12.5.1', ct_os: 'ubuntu22.04' }
          - { host_os: ubuntu-latest, cuda_version: '12.4.1', ct_os: 'ubuntu22.04' }
          - { host_os: ubuntu-latest, cuda_version: '12.3.2', ct_os: 'ubuntu22.04' }
          - { host_os: ubuntu-latest, cuda_version: '12.2.2', ct_os: 'ubuntu22.04' }
          - { host_os: ubuntu-latest, cuda_version: '12.1.0', ct_os: 'ubuntu22.04' }
          - { host_os: ubuntu-latest, cuda_version: '12.0.0', ct_os: 'ubuntu22.04' }
          - { host_os: ubuntu-latest, cuda_version: '11.8.0', ct_os: 'ubuntu22.04' }
          - { host_os: ubuntu-latest, cuda_version: '11.7.1', ct_os: 'ubuntu22.04' }
          - { host_os: ubuntu-latest, cuda_version: '11.0.3', ct_os: 'ubuntu20.04' }

  
    steps:

    - name: Update & install required packages inside the container
      run: |
        apt update
        apt -y full-upgrade
        apt install -y curl dialog git python3 python3-pip python3-setuptools sudo wget build-essential nvidia-opencl-dev ocl-icd-dev libgmp10 \
                       libgmp-dev make clinfo patch diffutils unzip

    - name: Checkout repo
      uses: actions/checkout@v3

    - name: Build from sources
      run: cd src && make -j$(nproc)

    - name: Rename binary to release target
      if: startsWith(github.ref, 'refs/tags')
      run: mv ./mfaktc ./mfaktc-${{ github.ref_name }}-linux64-cuda${{ matrix.sys.cuda_version }}

    - name: Make and upload release
      uses: softprops/action-gh-release@v2
      if: startsWith(github.ref, 'refs/tags')
      with:
        fail_on_unmatched_files: false
        generate_release_notes: true        
        files: ./mfaktc-${{ github.ref_name }}-linux64-cuda${{ matrix.sys.cuda_version }}
